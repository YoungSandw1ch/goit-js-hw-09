{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SACpC,IAAIC,EAAW,GAIfH,EAAKI,iBAAiB,UAiBtB,SAA2BC,GACzBF,EAASE,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MACnCC,QAAQC,IAAIP,MAlBdH,EAAKI,iBAAiB,UAqBtB,SAAsBC,GACpBA,EAAEM,iBAEF,IAAMC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWZ,GAtBTa,EALR,EAKkBJ,EAyBPC,EAxBjB,IAAII,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,IAGpCJ,EAAQ,CAAEK,SAAAP,E,MAAUJ,IAGtBO,EAAO,CAAEI,SAAAP,E,MAAUJ,MAClBA,OAgBFY,MAAK,EAAGD,SAAAE,EAAQb,MAAEA,MACjBH,QAAQC,IAAI,uBAAqBe,QAAiBb,UAEnDc,OAAM,EAAGH,SAAAI,EAAQf,MAAEA,MAClBH,QAAQC,IAAI,sBAAoBiB,QAAiBf,UA9BvD,IAAuBI,EAAUJ","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nlet formData = {};\nlet intervaltId = null;\nlet position = 0;\n\nform.addEventListener('change', onFormInputChange);\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction onFormInputChange(e) {\n  formData[e.target.name] = e.target.value;\n  console.log(formData);\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let { delay, step, amount } = formData;\n  // position += 1;\n\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\n// createPromise(2, 1500)\n// .then(({ position, delay }) => {\n//   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// })\n// .catch(({ position, delay }) => {\n//   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n// });\n\n// intervaltId = setInterval(() => {\n//   if (position === amount) clearInterval(intervaltId);\n\n//   position += 1;\n//   delay += step;\n\n//   createPromise(position, delay)\n//     .then(({ position, delay }) => {\n//       console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     })\n//     .catch(({ position, delay }) => {\n//       console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//     });\n// }, step);\n"],"names":["parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$formData","addEventListener","e","target","name","value","console","log","preventDefault","delay","delay1","step","amount","position1","Promise","resolve","reject","setTimeout","Math","random","position","then","position2","catch","position3"],"version":3,"file":"03-promises.9de870ea.js.map"}