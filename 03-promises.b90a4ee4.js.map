{"mappings":"gfAAAA,EAAA,SAEA,IAAMC,EAAOC,SAASC,cAAc,SAChCC,EAAW,GAIfH,EAAKI,iBAAiB,UAiBtB,SAA2BC,GACzBF,EAASE,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MACnCC,QAAQC,IAAIP,MAlBdH,EAAKI,iBAAiB,UAqBtB,SAAsBC,GACpBA,EAAEM,iBAEF,IAAMC,EAAwBT,EAAxBU,MAAwBV,EAAjBW,KAAiBX,EAAXY,QAtBEC,EALR,EAKkBH,EAyBPD,EAxBjB,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,IAGpCJ,EAAQ,CAAEK,SAAAP,EAAUH,UAGtBM,EAAO,CAAEI,SAAAP,EAAUH,YAClBA,OAgBFW,MAAK,SAAAC,G,IAAGC,EAAQD,EAARF,SAAUV,EAAKY,EAALZ,MACjBJ,QAAQC,IAAI,uBAAwCiB,OAAfD,EAAS,QAAYC,OAANd,EAAM,UAE3De,OAAM,SAAAH,G,IAAGI,EAAQJ,EAARF,SAAUV,EAAKY,EAALZ,MAClBJ,QAAQC,IAAI,sBAAuCiB,OAAfE,EAAS,QAAYF,OAANd,EAAM,UA9B/D,IAAuBG,EAAUH,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nlet formData = {};\nlet intervaltId = null;\nlet position = 0;\n\nform.addEventListener('change', onFormInputChange);\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction onFormInputChange(e) {\n  formData[e.target.name] = e.target.value;\n  console.log(formData);\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let { delay, step, amount } = formData;\n  // position += 1;\n\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\n// createPromise(2, 1500)\n// .then(({ position, delay }) => {\n//   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// })\n// .catch(({ position, delay }) => {\n//   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n// });\n\n// intervaltId = setInterval(() => {\n//   if (position === amount) clearInterval(intervaltId);\n\n//   position += 1;\n//   delay += step;\n\n//   createPromise(position, delay)\n//     .then(({ position, delay }) => {\n//       console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     })\n//     .catch(({ position, delay }) => {\n//       console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//     });\n// }, step);\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$formData","addEventListener","e","target","name","value","console","log","preventDefault","delay1","delay","step","amount","position1","Promise","resolve","reject","setTimeout","Math","random","position","then","param","position2","concat","catch","position3"],"version":3,"file":"03-promises.b90a4ee4.js.map"}