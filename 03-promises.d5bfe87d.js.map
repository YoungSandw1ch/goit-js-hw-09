{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,IAGpCJ,EAAQ,CAAEH,WAAUC,UAGtBG,EAAO,CAAEJ,WAAUC,YAClBA,MAoBP,SAASO,EAAaC,G,IAAET,EAAFS,EAAET,SAAUC,EAAZQ,EAAYR,MAChCJ,EAAAa,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,MAAK,CAC9DY,QAAO,MAIb,SAASC,EAAYL,G,IAAET,EAAFS,EAAET,SAAUC,EAAZQ,EAAYR,MAC/BJ,EAAAa,OAAOK,QAAQ,sBAAuCH,OAAfZ,EAAS,QAAYY,OAANX,EAAM,MAAK,CAC7DY,QAAO,MA1CAG,SAASC,cAAc,SAE/BC,iBAAiB,UAgBtB,SAAsBC,GACpBA,EAAEC,iBAMF,IAJA,IAAInB,GAASkB,EAAEE,OAAOpB,MAAMqB,MACtBC,GAAQJ,EAAEE,OAAOE,KAAKD,MACtBE,GAAUL,EAAEE,OAAOG,OAAOF,MAEvBG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EACtB,IAANA,IACFxB,GAASsB,GAGXxB,EAAc0B,EAAGxB,GAAOyB,KAAKlB,GAAcmB,MAAMb,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = +e.target.delay.value;\n  const step = +e.target.step.value;\n  const amount = +e.target.amount.value;\n\n  for (let i = 1; i <= amount; i += 1) {\n    if (i !== 1) {\n      delay += step;\n    }\n\n    createPromise(i, delay).then(notifySucces).catch(notifyError);\n  }\n}\n\nfunction notifySucces({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    timeout: 5000,\n  });\n}\n\nfunction notifyError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    timeout: 5000,\n  });\n}\n\n//==============with second event listener========================\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// const form = document.querySelector('.form');\n// let formData = {};\n\n// form.addEventListener('change', onFormInputChange);\n// form.addEventListener('submit', onFormSubmit);\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       const shouldResolve = Math.random() > 0.3;\n\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       }\n\n//       reject({ position, delay });\n//     }, delay);\n//   });\n// }\n\n// function onFormSubmit(e) {\n//   e.preventDefault();\n//   let { delay, step, amount } = formData;\n\n//   for (let i = 1; i <= amount; i += 1) {\n//     if (i !== 1) {\n//       delay += step;\n//     }\n\n//     createPromise(i, delay).then(notifySucces).catch(notifyError);\n//   }\n// }\n\n// function onFormInputChange(e) {\n//   formData[e.target.name] = Number(e.target.value);\n// }\n\n// function notifySucces({ position, delay }) {\n//   Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n//     timeout: 5000,\n//   });\n// }\n\n// function notifyError({ position, delay }) {\n//   Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n//     timeout: 5000,\n//   });\n// }\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$notifySucces","param","Notify","success","concat","timeout","$ce04d3a99e08e73b$var$notifyError","failure","document","querySelector","addEventListener","e","preventDefault","target","value","step","amount","i","then","catch"],"version":3,"file":"03-promises.d5bfe87d.js.map"}